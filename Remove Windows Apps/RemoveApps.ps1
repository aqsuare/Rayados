#set-executionpolicy remotesigned#Set-ExecutionPolicy -ExecutionPolicy Bypass$Buildnr = (Get-CimInstance Win32_Operatingsystem).BuildNumber$Applist = Get-Content "$($PSScriptRoot)\apps$($Buildnr).txt"$Capabilities = Get-Content "$($PSScriptRoot)\Capabilities$($Buildnr).txt"$Logfile = "$env:SystemRoot\Temp\RemoveApps_$($Buildnr).log"Set-Content -Path $Logfile -Value "Remove builtin apps based on $applist"ForEach ($App in $Applist) {    $App = $App.TrimEnd()    $PackageFullName = (Get-AppxPackage $App).PackageFullName    $ProPackageFullName = (Get-AppxProvisionedPackage -online | where {$_.Displayname -eq $App}).PackageName    if ($PackageFullName) {        "`r`nRemoving Package: $App" | Out-File -FilePath $Logfile -Append -Encoding ascii        start-sleep -Seconds 5        remove-AppxPackage -package $PackageFullName | Out-File -FilePath $Logfile -Append -Encoding ascii    }    else {        "Unable to find package: $App" | Out-File -FilePath $Logfile -Append -Encoding ascii     }    if ($ProPackageFullName) {        "`r`nRemoving Provisioned Package: $ProPackageFullName" | Out-File -FilePath $Logfile -Append -Encoding ascii        start-sleep -Seconds 5         Remove-AppxProvisionedPackage -online -packagename $ProPackageFullName | Out-File -FilePath $Logfile -Append -Encoding ascii      }    else {        "Unable to find provisioned package: $App"| Out-File -FilePath $Logfile -Append -Encoding ascii    }}ForEach ($Capability in $Capabilities) {    "`r`nRemoving capability: $Capability".Replace("  ", " ") | Out-File -FilePath $Logfile -Append     Remove-WindowsCapability -online -name $Capability | Out-File -FilePath $Logfile -Append -Encoding ascii}Get-ProvisionedAppxPackage -Online | `
Where-Object { $_.PackageName -match "xbox" } | `
ForEach-Object { Remove-ProvisionedAppxPackage -Online -AllUsers -PackageName $_.PackageName }

#Get Current Setting before change
Get-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" | select ShellFeedsTaskbarViewMode
 
#Remove News and Interest Using Powershell
Set-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" -Name "ShellFeedsTaskbarViewMode" -Value 2
 
#Get Current Setting after change
Get-ItemProperty -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" | select ShellFeedsTaskbarViewMode